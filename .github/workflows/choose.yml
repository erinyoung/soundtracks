# This is a basic workflow to help you get started with Actions

name: Choose soundtrack

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  find:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name:  choose_ost
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          ost=$(grep "\- " README.md | grep -v "\- (" | sort --random-sort | head -n 1 )
          echo "The ost is $ost"

          game=$(echo $ost | sed 's/- \[//g' | sed 's/\](.*//g')

          echo "The game is $game"

          question="Tell me about the soundtrack for ${game}. What are the popular tracks?"

          echo "The question is \"$question\""
          
          response=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=$GEMINI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{
              \"contents\": [{
                \"parts\": [{
                  \"text\": \"$question\"
                }]
              }]
            }")

          echo "$response" | jq -r '.candidates[0].content.parts[0].text'
          
